<snippet>
	<content><![CDATA[
struct node {
    ll sum, maxprefix, maxsuffix, maxsum;
};
template<class T> struct SegmentTree {
public :
    const node ID {};
    vector<node> t; int n;
    node operation(node a, node b) {
        node temp;
        temp.sum = a.sum + b.sum;
        temp.maxprefix = max(a.maxprefix, a.sum + b.maxprefix);
        temp.maxsuffix = max(a.maxsuffix + b.sum, b.maxsuffix);
        temp.maxsum = max((a.maxsuffix + b.maxprefix), max(a.maxsum , b.maxsum));
        return temp;
    }
    SegmentTree(const vector<T> &v) {
        n = (int)v.size();
        t.assign(2 * n, ID);
        for (int i = 0; i < n; ++i)t[n + i] = {v[i], v[i], v[i], v[i]};
        for (int i = n - 1; i > 0; --i) t[i] = operation(t[i << 1], t[i << 1 | 1]);
    }
    node query(int l, int r) {
        if (l == r)return t[n + l];
        node ra = t[n + l], rb = t[n + r];
        l++, r--;
        for (l += n, r += n + 1; l < r; l >>= 1, r >>= 1) {
            if (l & 1) ra = operation(ra, t[l++]);
            if (r & 1) rb = operation(t[--r], rb);
        }
        return operation(ra, rb);
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	 <tabTrigger>maxsubarraysum</tabTrigger> 
	 <scope>source.c++</scope> 
</snippet>
